/*
 * Created by: Andrew Nguyen
 * Date: 2019-04-14
 * Time: 19:10
 * SURLY0
 */

import java.util.Arrays;
import java.util.HashMap;

/**
 * Used to define a given Relation.
 * Eg: when creating a relation with RELATION COURSE [attribute format]
 *     a Relation object with name "COURSE" and format [attribute format]
 *     is instantiated. When using INSERT commands, the individual Items can
 *     only go into the Relation that they are designated for.
 */
public class Relation {

    private String relName;
    private int attrCount;
    private HashMap<String, Item> items;    //Map of all Items that fall under a Relation
    private String[] attrFormat;

    /**
     * Constructor for Relation
     * @param name The name of the Relation type, eg: COURSE, PREREQ, etc.
     * @param count The number of attributes an Item of this Relation type should have
     * @param format Format for the attributes of this Relation
     */
    public Relation(String name, int count, String[] format) {

        relName = name;
        this.attrCount = count;
        attrFormat = format;
        items = new HashMap<>();

    }

    @Override
    public String toString() {
        String s = relName + " : " + attrCount
                + " Attributes per item : Format â€“ "
                + Arrays.toString(attrFormat) + ":";
        for (String k : items.keySet()) {
            s += "\n" + Arrays.deepToString(items.get(k).getAttributes().toArray()) + ", ";
        }
        s = s.substring(0, s.length() - 2);
        return s + "\n";
    }

    /**
     * Adds an Item of this Relation type into the Relation object.
     * @param i Item object. Only generated by InsertParser
     */
    public void addItem(Item i) {
        if (!items.containsKey(i.getName())) {
            items.put(i.getName(), i);
        } else {
            // there already exists a key, we need to append to the existing one
            // eg: CSCI 145 can have both PREREQS MATH115 and CSCI141
            Item toAppend = items.get(i.getName());
            toAppend.addAttributeSet(i.getAttributes().get(0));
        }
    }

    public int getAttrCount() {
        return attrCount;
    }
}
